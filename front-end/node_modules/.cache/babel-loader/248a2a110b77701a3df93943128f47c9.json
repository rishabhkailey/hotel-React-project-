{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishabh\\\\Desktop\\\\babel1\\\\react\\\\project\\\\hotel\\\\front-end\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidPassword: null,\n      isInvalidPassword: null,\n      isValidEmail: null,\n      isInvalidEmail: null,\n      pwdMsg: '',\n      logInStatus: {\n        error: false,\n        msg: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n  }\n\n  validateEmail(event) {\n    let mail = event.target.value;\n    let mailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (mailRegExp.test(mail)) {\n      this.setState({\n        isValidEmail: true,\n        isInvalidEmail: false\n      });\n    } else this.setState({\n      isValidEmail: false,\n      isInvalidEmail: true\n    });\n  }\n\n  validatePassword(event) {\n    let pass = event.target.value;\n\n    if (pass.length <= 6) {\n      this.setState({\n        isValidPassword: false,\n        isInvalidPassword: true,\n        pwdMsg: 'password should be of 6 or more characters'\n      });\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    console.log(event.target.email.value);\n    let user = {\n      email: event.target.email.value,\n      password: event.target.password.value\n    };\n    fetch('http://localhost:5000/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      if (!response.ok) throw new Error(response.status);else return response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        logInStatus: data\n      });\n    }).catch(error => {\n      console.log('error: ' + error);\n      this.setState({\n        requestFailed: true\n      });\n    }); // .then((res) => {\n    //     alert(res);\n    //     fetch('http://localhost:5000/protected', {\n    //         method: 'POST',\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //         body: JSON.stringify(user)\n    //     })\n    // })\n  }\n\n  render() {\n    let _this$state = this.state,\n        isValidEmail = _this$state.isValidEmail,\n        isInvalidEmail = _this$state.isInvalidEmail,\n        isValidPassword = _this$state.isValidPassword,\n        isInvalidPassword = _this$state.isInvalidPassword;\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        backgroundColor: '#f9f9f9'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: 'auto',\n        fontSize: '30px',\n        fontWeight: '400'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"log in\")), React.createElement(Form, {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      className: \"col-lg-4\",\n      style: {\n        margin: 'auto',\n        padding: '5%',\n        backgroundColor: 'white',\n        borderRadius: '2%',\n        border: '1px solid #e8e5e5'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      required: true,\n      isValid: isValidEmail,\n      isInvalid: isInvalidEmail,\n      onBlur: this.validateEmail,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Please provide a email address.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      required: true,\n      isValid: isValidPassword,\n      isInvalid: isInvalidPassword,\n      onBlur: this.validatePassword,\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.pwdMsg)), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      style: {\n        margin: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"log in\"))), React.createElement(\"div\", {\n      className: \"col-lg-4\",\n      style: {\n        margin: 'auto',\n        padding: '2%',\n        backgroundColor: 'white',\n        borderRadius: '2%',\n        border: '1px solid #e8e5e5',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"new here ?\", React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"create an account\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/components/login/login.jsx"],"names":["React","Component","Form","Button","Link","Login","constructor","props","state","isValidPassword","isInvalidPassword","isValidEmail","isInvalidEmail","pwdMsg","logInStatus","error","msg","onSubmit","bind","validateEmail","validatePassword","event","mail","target","value","mailRegExp","test","setState","pass","length","preventDefault","console","log","email","user","password","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","data","catch","requestFailed","render","backgroundColor","padding","margin","fontSize","fontWeight","borderRadius","border","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isValidPassword: null,\r\n            isInvalidPassword: null,\r\n            isValidEmail: null,\r\n            isInvalidEmail: null,\r\n            pwdMsg: '',\r\n            logInStatus: {\r\n                error: false,\r\n                msg: ''\r\n            }\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateEmail = this.validateEmail.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n    }\r\n    validateEmail(event) {\r\n        let mail = event.target.value;\r\n        let mailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (mailRegExp.test(mail)) {\r\n            this.setState({ isValidEmail: true, isInvalidEmail: false })\r\n        }\r\n        else\r\n            this.setState({ isValidEmail: false, isInvalidEmail: true })\r\n\r\n    }\r\n    validatePassword(event) {\r\n        let pass = event.target.value;\r\n        if (pass.length <= 6) {\r\n            this.setState({ isValidPassword: false, isInvalidPassword: true, pwdMsg: 'password should be of 6 or more characters' })\r\n        }\r\n    }\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        console.log(event.target.email.value);\r\n        let user = {email: event.target.email.value,password: event.target.password.value}\r\n\r\n        fetch('http://localhost:5000/users/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else return response.json();\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n            this.setState({logInStatus: data})\r\n          })\r\n          .catch((error) => {\r\n            console.log('error: ' + error);\r\n            this.setState({ requestFailed: true })\r\n          });\r\n            // .then((res) => {\r\n            //     alert(res);\r\n            //     fetch('http://localhost:5000/protected', {\r\n            //         method: 'POST',\r\n            //         headers: {\r\n            //             'Content-Type': 'application/json'\r\n            //         },\r\n            //         body: JSON.stringify(user)\r\n            //     })\r\n            // })\r\n    }\r\n    render() {\r\n        let { isValidEmail, isInvalidEmail, isValidPassword, isInvalidPassword } = this.state;\r\n        return <div className='container-fluid' style={{ backgroundColor: '#f9f9f9' }}>\r\n            <div className='row' style={{ padding: '2%' }}>\r\n                <div style={{ margin: 'auto', fontSize: '30px', fontWeight: '400' }}>log in</div>\r\n            </div>\r\n            <Form noValidate onSubmit={this.onSubmit} className='col-lg-4' style={{ margin: 'auto', padding: '5%', backgroundColor: 'white', borderRadius: '2%', border: '1px solid #e8e5e5' }}>\r\n                <Form.Group controlId=\"formBasicEmail\" style={{ padding: '1%' }}>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control required isValid={isValidEmail} isInvalid={isInvalidEmail} onBlur={this.validateEmail} type=\"email\" placeholder=\"Enter email\" name='email' />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please provide a email address.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\" style={{ padding: '1%' }}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control required isValid={isValidPassword} isInvalid={isInvalidPassword} onBlur={this.validatePassword} type=\"password\" placeholder=\"Password\" name='password' />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {this.state.pwdMsg}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n                <div className='row' style={{ padding: '1%' }}>\r\n                    <Button variant=\"primary\" type=\"submit\" style={{ margin: 'auto' }}>\r\n                        log in\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n            <div className='col-lg-4' style={{ margin: 'auto', padding: '2%', backgroundColor: 'white', borderRadius: '2%', border: '1px solid #e8e5e5', textAlign: 'center' }}>\r\n                new here ?<Link to='/signup'>create an account</Link>\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}