{"ast":null,"code":"import key from './apiKey';\n\nconst getSuggestions = async value => {\n  let res = await fetch(\"https://apidojo-booking-v1.p.rapidapi.com/locations/auto-complete?languagecode=en-us&text=\".concat(value), {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": key['host'],\n      \"x-rapidapi-key\": key['key']\n    }\n  }).then(res => res.json()).then(res => {\n    console.log(res);\n\n    if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\n      console.log(res.message);\n      console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\");\n      return null;\n    }\n\n    let suggestions = [];\n    res.forEach(res => {\n      var i = 0;\n\n      for (i = 0; i < res.label.length; i++) {\n        if (res.label[i].localeCompare(',') === 0) {\n          break;\n        }\n      }\n\n      var name = res.label.substring(0, i);\n      var info = res.label.substring(i + 1);\n      suggestions.push({\n        name: name,\n        info: info,\n        dest_type: res.dest_type,\n        dest_id: res.dest_id,\n        latitude: res.latitude,\n        longitude: res.longitude\n      }); // console.log(name,info);\n    });\n    return suggestions;\n  }); // return res;\n\n  console.log(res); // await console.log('suggestions = ', suggestions);\n\n  return res; // await return suggestions;\n};\n\nexport default getSuggestions; // showSuggestions('chan').then((res)=>{console.log(res)});","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/api_calls/getSuggestions.js"],"names":["key","getSuggestions","value","res","fetch","then","json","console","log","message","localeCompare","suggestions","forEach","i","label","length","name","substring","info","push","dest_type","dest_id","latitude","longitude"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;;AAEA,MAAMC,cAAc,GAAG,MAAMC,KAAN,IAAgB;AACnC,MAAIC,GAAG,GAAG,MAAMC,KAAK,qGAA8FF,KAA9F,GAAuG;AACpH,cAAU,KAD0G;AAEpH,eAAW;AACP,yBAAmBF,GAAG,CAAC,MAAD,CADf;AAEP,wBAAkBA,GAAG,CAAC,KAAD;AAFd;AAFyG,GAAvG,CAAL,CAOXK,IAPW,CAOLF,GAAD,IAASA,GAAG,CAACG,IAAJ,EAPH,EAQXD,IARW,CAQLF,GAAD,IAAS;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;;AACA,QAAIA,GAAG,CAACM,OAAJ,IAAeN,GAAG,CAACM,OAAJ,CAAYC,aAAZ,CAA0B,oBAA1B,MAAoD,CAAvE,EAA0E;AACtEH,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,OAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,sIAAZ;AACA,aAAO,IAAP;AACH;;AACD,QAAIG,WAAW,GAAG,EAAlB;AACAR,IAAAA,GAAG,CAACS,OAAJ,CAAaT,GAAD,IAAS;AACjB,UAAIU,CAAC,GAAG,CAAR;;AACA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGV,GAAG,CAACW,KAAJ,CAAUC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACnC,YAAIV,GAAG,CAACW,KAAJ,CAAUD,CAAV,EAAaH,aAAb,CAA2B,GAA3B,MAAoC,CAAxC,EAA2C;AACvC;AACH;AACJ;;AACD,UAAIM,IAAI,GAAGb,GAAG,CAACW,KAAJ,CAAUG,SAAV,CAAoB,CAApB,EAAuBJ,CAAvB,CAAX;AACA,UAAIK,IAAI,GAAGf,GAAG,CAACW,KAAJ,CAAUG,SAAV,CAAoBJ,CAAC,GAAG,CAAxB,CAAX;AACAF,MAAAA,WAAW,CAACQ,IAAZ,CAAiB;AAAEH,QAAAA,IAAI,EAAEA,IAAR;AAAcE,QAAAA,IAAI,EAAEA,IAApB;AAA0BE,QAAAA,SAAS,EAAEjB,GAAG,CAACiB,SAAzC;AAAoDC,QAAAA,OAAO,EAAElB,GAAG,CAACkB,OAAjE;AAA0EC,QAAAA,QAAQ,EAAEnB,GAAG,CAACmB,QAAxF;AAAkGC,QAAAA,SAAS,EAAEpB,GAAG,CAACoB;AAAjH,OAAjB,EATiB,CAUjB;AACH,KAXD;AAYA,WAAOZ,WAAP;AACH,GA7BW,CAAhB,CADmC,CA+B/B;;AACJJ,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAhCmC,CAiCnC;;AACA,SAAOA,GAAP,CAlCmC,CAmCnC;AACH,CApCD;;AAqCA,eAAeF,cAAf,C,CAEA","sourcesContent":["import key from './apiKey'\r\n\r\nconst getSuggestions = async(value) => {\r\n    let res = await fetch(`https://apidojo-booking-v1.p.rapidapi.com/locations/auto-complete?languagecode=en-us&text=${value}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": key['host'],\r\n                \"x-rapidapi-key\": key['key']\r\n            }\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            console.log(res);\r\n            if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\r\n                console.log(res.message);\r\n                console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\")\r\n                return null;\r\n            }\r\n            let suggestions = [];\r\n            res.forEach((res) => {\r\n                var i = 0;\r\n                for (i = 0; i < res.label.length; i++) {\r\n                    if (res.label[i].localeCompare(',') === 0) {\r\n                        break;\r\n                    }\r\n                }\r\n                var name = res.label.substring(0, i);\r\n                var info = res.label.substring(i + 1);\r\n                suggestions.push({ name: name, info: info, dest_type: res.dest_type, dest_id: res.dest_id, latitude: res.latitude, longitude: res.longitude });\r\n                // console.log(name,info);\r\n            })\r\n            return suggestions;\r\n        })\r\n        // return res;\r\n    console.log(res);\r\n    // await console.log('suggestions = ', suggestions);\r\n    return res;\r\n    // await return suggestions;\r\n}\r\nexport default getSuggestions;\r\n\r\n// showSuggestions('chan').then((res)=>{console.log(res)});"]},"metadata":{},"sourceType":"module"}