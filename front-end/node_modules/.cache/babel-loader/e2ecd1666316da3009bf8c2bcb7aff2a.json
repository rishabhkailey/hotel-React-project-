{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishabh\\\\Desktop\\\\babel1\\\\react\\\\project\\\\hotel\\\\front-end\\\\src\\\\components\\\\signup\\\\signup.jsx\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isValidPassword: null,\n      isInvalidPassword: null,\n      isValidEmail: null,\n      isInvalidEmail: null,\n      isValidUname: null,\n      isInvalidUname: null,\n      pwdMsg: '',\n      signUpStatus: {\n        logIn: false,\n        error: false,\n        msg: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePassword = this.validatePassword.bind(this);\n    this.validateUname = this.validateUname.bind(this);\n  }\n\n  validateUname(event) {\n    if (event.target.value.length === 0) {\n      this.setState({\n        isValidUname: false,\n        isInvalidUname: true\n      });\n    } else {\n      this.setState({\n        isValidUname: true,\n        isInvalidEmail: false\n      });\n    }\n  }\n\n  validateEmail(event) {\n    let mail = event.target.value;\n    let mailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (mailRegExp.test(mail)) {\n      this.setState({\n        isValidEmail: true,\n        isInvalidEmail: false\n      });\n    } else this.setState({\n      isValidEmail: false,\n      isInvalidEmail: true\n    });\n  }\n\n  validatePassword(event) {\n    let pass = event.target.value;\n\n    if (pass.length <= 6) {\n      this.setState({\n        isValidPassword: false,\n        isInvalidPassword: true,\n        pwdMsg: 'password should be of 6 or more characters'\n      });\n    } else if (!/.*[A-Z]/.test(pass)) {\n      this.setState({\n        isValidPassword: false,\n        isInvalidPassword: true,\n        pwdMsg: 'password should contain atleast 1 uppercase character'\n      });\n    } else if (!/.*[a-z]/.test(pass)) {\n      this.setState({\n        isValidPassword: false,\n        isInvalidPassword: true,\n        pwdMsg: 'password should contain atleast 1 lowercase character'\n      });\n    } else if (!/.*[0-9]/.test(pass)) {\n      this.setState({\n        isValidPassword: false,\n        isInvalidPassword: true,\n        pwdMsg: 'password should containt atleast 1 number'\n      });\n    } else if (!/.*[!@#\\$%\\^&]/.test(pass)) {\n      this.setState({\n        isValidPassword: false,\n        isInvalidPassword: true,\n        pwdMsg: 'password should containt atleast 1 special character'\n      });\n    } else this.setState({\n      isValidPassword: true,\n      isInvalidPassword: false\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    let user = {\n      uname: event.target.username.value,\n      email: event.target.email.value,\n      password: event.target.password.value\n    };\n    fetch('http://localhost:5000/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => {\n      if (!response.ok) throw new Error(response.status);else return response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        signUpStatus: data\n      });\n    }).catch(error => {\n      console.log('error: ' + error);\n    }); // console.log(event.target.email.value)\n  }\n\n  render() {\n    let _this$state = this.state,\n        isValidEmail = _this$state.isValidEmail,\n        isInvalidEmail = _this$state.isInvalidEmail,\n        isValidPassword = _this$state.isValidPassword,\n        isInvalidPassword = _this$state.isInvalidPassword,\n        isValidUname = _this$state.isValidUname,\n        isInvalidUname = _this$state.isInvalidUname;\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      style: {\n        backgroundColor: '#f9f9f9'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        margin: 'auto',\n        fontSize: '30px',\n        fontWeight: '400'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Create new account\")), React.createElement(Form, {\n      noValidate: true,\n      onSubmit: this.onSubmit,\n      className: \"col-lg-4\",\n      style: {\n        margin: 'auto',\n        padding: '5%',\n        backgroundColor: 'white',\n        borderRadius: '2%',\n        border: '1px solid #e8e5e5'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.signUpStatus.error && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        textAlign: 'center'\n      },\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.signUpStatus.msg), React.createElement(Form.Group, {\n      controlId: \"username\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      required: true,\n      isValid: isValidUname,\n      isInvalid: isInvalidUname,\n      onBlur: this.validateUname,\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"uname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Please enter Username.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(Form.Control, {\n      required: true,\n      isValid: isValidEmail,\n      isInvalid: isInvalidEmail,\n      onBlur: this.validateEmail,\n      type: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Please provide a email address.\")), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      required: true,\n      isValid: isValidPassword,\n      isInvalid: isInvalidPassword,\n      onBlur: this.validatePassword,\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.pwdMsg)), React.createElement(\"div\", {\n      className: \"row\",\n      style: {\n        padding: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      style: {\n        margin: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Sign up\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/components/signup/signup.jsx"],"names":["React","Component","Form","Button","Link","Login","constructor","props","state","isValidPassword","isInvalidPassword","isValidEmail","isInvalidEmail","isValidUname","isInvalidUname","pwdMsg","signUpStatus","logIn","error","msg","onSubmit","bind","validateEmail","validatePassword","validateUname","event","target","value","length","setState","mail","mailRegExp","test","pass","preventDefault","user","uname","username","email","password","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","json","data","console","log","catch","render","backgroundColor","padding","margin","fontSize","fontWeight","borderRadius","border","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isValidPassword: null,\r\n            isInvalidPassword: null,\r\n            isValidEmail: null,\r\n            isInvalidEmail: null,\r\n            isValidUname: null,\r\n            isInvalidUname: null,\r\n            pwdMsg: '',\r\n            signUpStatus: {\r\n                logIn: false,\r\n                error: false,\r\n                msg: ''\r\n            }\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.validateEmail = this.validateEmail.bind(this);\r\n        this.validatePassword = this.validatePassword.bind(this);\r\n        this.validateUname = this.validateUname.bind(this);\r\n    }\r\n    validateUname(event){\r\n        if(event.target.value.length === 0)\r\n        {\r\n            this.setState({isValidUname: false,isInvalidUname: true})\r\n        }\r\n        else\r\n        {\r\n            this.setState({isValidUname: true,isInvalidEmail: false})\r\n        }\r\n    }\r\n    validateEmail(event) {\r\n        let mail = event.target.value;\r\n        let mailRegExp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        if (mailRegExp.test(mail)) {\r\n            this.setState({ isValidEmail: true, isInvalidEmail: false })\r\n        }\r\n        else\r\n            this.setState({ isValidEmail: false, isInvalidEmail: true })\r\n\r\n    }\r\n    validatePassword(event) {\r\n        let pass = event.target.value;\r\n        if (pass.length <= 6) {\r\n            this.setState({ isValidPassword: false, isInvalidPassword: true, pwdMsg: 'password should be of 6 or more characters' })\r\n        }\r\n        else if (!/.*[A-Z]/.test(pass)) {\r\n            this.setState({ isValidPassword: false, isInvalidPassword: true, pwdMsg: 'password should contain atleast 1 uppercase character' })\r\n        }\r\n        else\r\n            if (!/.*[a-z]/.test(pass)) {\r\n                this.setState({ isValidPassword: false, isInvalidPassword: true, pwdMsg: 'password should contain atleast 1 lowercase character' })\r\n            }\r\n            else if (!/.*[0-9]/.test(pass)) {\r\n                this.setState({ isValidPassword: false, isInvalidPassword: true, pwdMsg: 'password should containt atleast 1 number' })\r\n            }\r\n            else if (!/.*[!@#\\$%\\^&]/.test(pass)) {\r\n                this.setState({ isValidPassword: false, isInvalidPassword: true, pwdMsg: 'password should containt atleast 1 special character' })\r\n            }\r\n            else\r\n                this.setState({ isValidPassword: true, isInvalidPassword: false })\r\n\r\n    }\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        let user = {\r\n            uname: event.target.username.value,\r\n            email: event.target.email.value,\r\n            password: event.target.password.value\r\n        }\r\n        fetch('http://localhost:5000/users/signup', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        })\r\n        .then((response) => {\r\n            if(!response.ok) throw new Error(response.status);\r\n            else return response.json();\r\n          })\r\n          .then((data) => {\r\n            console.log(data);\r\n            this.setState({signUpStatus: data})\r\n          })\r\n          .catch((error) => {\r\n            console.log('error: ' + error);\r\n          });\r\n        // console.log(event.target.email.value)\r\n    }\r\n    render() {\r\n        let { isValidEmail, isInvalidEmail, isValidPassword, isInvalidPassword ,isValidUname,isInvalidUname } = this.state;\r\n        return <div className='container-fluid' style={{ backgroundColor: '#f9f9f9' }}>\r\n            \r\n            <div className='row' style={{ padding: '2%' }}>\r\n                <div style={{ margin: 'auto', fontSize: '30px', fontWeight: '400' }}>Create new account</div>\r\n            </div>\r\n            <Form noValidate onSubmit={this.onSubmit} className='col-lg-4' style={{ margin: 'auto', padding: '5%', backgroundColor: 'white', borderRadius: '2%', border: '1px solid #e8e5e5' }}>\r\n                {\r\n                    this.state.signUpStatus.error && <div className=\"alert alert-danger\" style={{textAlign: 'center'}} role=\"alert\">\r\n                        {this.state.signUpStatus.msg}\r\n                    </div>\r\n                }\r\n                <Form.Group controlId=\"username\"  style={{ padding: '1%' }}>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control required isValid={isValidUname} isInvalid={isInvalidUname} onBlur={this.validateUname} type=\"text\" placeholder=\"Username\" name='uname' />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter Username.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicEmail\" style={{ padding: '1%' }}>\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control required isValid={isValidEmail} isInvalid={isInvalidEmail} onBlur={this.validateEmail} type=\"email\" placeholder=\"Enter email\" name='email' />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Please provide a email address.\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\" style={{ padding: '1%' }}>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control required isValid={isValidPassword} isInvalid={isInvalidPassword} onBlur={this.validatePassword} type=\"password\" placeholder=\"Password\" name='password' />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {this.state.pwdMsg}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                    </Form.Group> */}\r\n                <div className='row' style={{ padding: '1%' }}>\r\n                    <Button variant=\"primary\" type=\"submit\" style={{ margin: 'auto' }}>\r\n                        Sign up\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    }\r\n}\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}