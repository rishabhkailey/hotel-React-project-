{"ast":null,"code":"import key from './apiKey';\n\nconst getRooms = async (longitude, latitude, date) => {\n  // %252C seprator in bbox\n  let bbox = \"\".concat(latitude - 0.030268, \"%252C\").concat(latitude + 0.030268, \"%252C\").concat(longitude - 0.130171, \"%252C\").concat(longitude + 0.130171); // console.log(rooms);\n\n  console.log(bbox);\n  let arrival_date, departure_date;\n\n  if (!date) {\n    let date = new Date();\n    console.log(date);\n    arrival_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    date.setDate(date.getDate() + 2);\n    departure_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n  }\n\n  console.log(arrival_date, departure_date);\n  let res = await fetch(\"https://apidojo-booking-v1.p.rapidapi.com/properties/list-by-map?search_id=none&price_filter_currencycode=USD&languagecode=en-us&order_by=popularity&guest_qty=1&room_qty=1&departure_date=\".concat(departure_date, \"&bbox=\").concat(bbox, \"&arrival_date=\").concat(arrival_date), {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": key['host'],\n      \"x-rapidapi-key\": key['key']\n    }\n  }).then(res => res.json()).then(res => {\n    if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\n      console.log(res.message);\n      console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\");\n      return null;\n    }\n\n    if (res.message) {\n      return null;\n    }\n\n    console.log(res);\n    let refined_result = res.result.map(res => {\n      // res.main_photo_url = \"http://r-ec.bstatic.com/xdata/images/hotel/square60/77897735.jpg?k=9bef4152fd76026ad7885fc95a2a48d04a5a6bb68a1eefa5e292a8429aa3845e&o=\";\n      // resolution is not good so replace square60 with max500\n      let photo_url = res.main_photo_url;\n      var pos = photo_url.indexOf(\"square60\");\n      photo_url = photo_url.substring(0, pos) + 'max500' + photo_url.substring(pos + 8); // console.log(photo_url);\n\n      return {\n        id: res.hotel_id,\n        name: res.hotel_name,\n        type: res.accommodation_type_name,\n        image: photo_url,\n        address: res.address,\n        city: res.city,\n        country: res.country_trans\n      };\n    });\n    return refined_result;\n  });\n  return res;\n};\n\nexport default getRooms;","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/api_calls/getRooms.js"],"names":["key","getRooms","longitude","latitude","date","bbox","console","log","arrival_date","departure_date","Date","getFullYear","getMonth","getDate","setDate","res","fetch","then","json","message","localeCompare","refined_result","result","map","photo_url","main_photo_url","pos","indexOf","substring","id","hotel_id","name","hotel_name","type","accommodation_type_name","image","address","city","country","country_trans"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;;AAEA,MAAMC,QAAQ,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,EAA4BC,IAA5B,KAAqC;AAClD;AACA,MAAIC,IAAI,aAAMF,QAAQ,GAAG,QAAjB,kBAAiCA,QAAQ,GAAG,QAA5C,kBAA4DD,SAAS,GAAG,QAAxE,kBAAwFA,SAAS,GAAG,QAApG,CAAR,CAFkD,CAGlD;;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,MAAIG,YAAJ,EAAkBC,cAAlB;;AAEA,MAAI,CAACL,IAAL,EAAW;AACP,QAAIA,IAAI,GAAG,IAAIM,IAAJ,EAAX;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAI,IAAAA,YAAY,GAAG,KAAKJ,IAAI,CAACO,WAAL,EAAL,GAA0B,GAA1B,IAAiCP,IAAI,CAACQ,QAAL,KAAkB,CAAnD,IAAwD,GAAxD,GAA8DR,IAAI,CAACS,OAAL,EAA7E;AACAT,IAAAA,IAAI,CAACU,OAAL,CAAaV,IAAI,CAACS,OAAL,KAAiB,CAA9B;AACAJ,IAAAA,cAAc,GAAG,KAAKL,IAAI,CAACO,WAAL,EAAL,GAA0B,GAA1B,IAAiCP,IAAI,CAACQ,QAAL,KAAkB,CAAnD,IAAwD,GAAxD,GAA8DR,IAAI,CAACS,OAAL,EAA/E;AACH;;AACDP,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ,EAA0BC,cAA1B;AACA,MAAIM,GAAG,GAAG,MAAMC,KAAK,sMAA+LP,cAA/L,mBAAsNJ,IAAtN,2BAA2OG,YAA3O,GAA2P;AAC5Q,cAAU,KADkQ;AAE5Q,eAAW;AACP,yBAAmBR,GAAG,CAAC,MAAD,CADf;AAEP,wBAAkBA,GAAG,CAAC,KAAD;AAFd;AAFiQ,GAA3P,CAAL,CAOXiB,IAPW,CAONF,GAAG,IAAIA,GAAG,CAACG,IAAJ,EAPD,EAQXD,IARW,CAQNF,GAAG,IAAI;AACT,QAAIA,GAAG,CAACI,OAAJ,IAAeJ,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0B,oBAA1B,MAAoD,CAAvE,EAA0E;AACtEd,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACI,OAAhB;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAY,sIAAZ;AACA,aAAO,IAAP;AACH;;AACD,QAAGQ,GAAG,CAACI,OAAP,EAAe;AACX,aAAO,IAAP;AACH;;AACDb,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,QAAIM,cAAc,GAAGN,GAAG,CAACO,MAAJ,CAAWC,GAAX,CAAgBR,GAAD,IAAS;AACzC;AACA;AACA,UAAIS,SAAS,GAAGT,GAAG,CAACU,cAApB;AACA,UAAIC,GAAG,GAAGF,SAAS,CAACG,OAAV,CAAkB,UAAlB,CAAV;AACAH,MAAAA,SAAS,GAAGA,SAAS,CAACI,SAAV,CAAoB,CAApB,EAAuBF,GAAvB,IAA8B,QAA9B,GAAyCF,SAAS,CAACI,SAAV,CAAoBF,GAAG,GAAC,CAAxB,CAArD,CALyC,CAMzC;;AACA,aAAO;AAACG,QAAAA,EAAE,EAAEd,GAAG,CAACe,QAAT;AAAmBC,QAAAA,IAAI,EAAEhB,GAAG,CAACiB,UAA7B;AAAyCC,QAAAA,IAAI,EAAElB,GAAG,CAACmB,uBAAnD;AAA4EC,QAAAA,KAAK,EAAEX,SAAnF;AAA8FY,QAAAA,OAAO,EAAErB,GAAG,CAACqB,OAA3G;AAAoHC,QAAAA,IAAI,EAAEtB,GAAG,CAACsB,IAA9H;AAAoIC,QAAAA,OAAO,EAAEvB,GAAG,CAACwB;AAAjJ,OAAP;AACH,KARoB,CAArB;AASA,WAAOlB,cAAP;AACH,GA5BW,CAAhB;AA6BA,SAAON,GAAP;AACH,CA7CD;;AA8CA,eAAed,QAAf","sourcesContent":["import key from './apiKey'\r\n\r\nconst getRooms = async (longitude, latitude, date) => {\r\n    // %252C seprator in bbox\r\n    let bbox = `${latitude - 0.030268}%252C${latitude + 0.030268}%252C${longitude - 0.130171}%252C${longitude + 0.130171}`;\r\n    // console.log(rooms);\r\n    console.log(bbox);\r\n    let arrival_date, departure_date;\r\n\r\n    if (!date) {\r\n        let date = new Date();\r\n        console.log(date);\r\n        arrival_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n        date.setDate(date.getDate() + 2);\r\n        departure_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n    }\r\n    console.log(arrival_date, departure_date);\r\n    let res = await fetch(`https://apidojo-booking-v1.p.rapidapi.com/properties/list-by-map?search_id=none&price_filter_currencycode=USD&languagecode=en-us&order_by=popularity&guest_qty=1&room_qty=1&departure_date=${departure_date}&bbox=${bbox}&arrival_date=${arrival_date}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": key['host'],\r\n            \"x-rapidapi-key\": key['key']\r\n        }\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\r\n                console.log(res.message);\r\n                console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\")\r\n                return null;\r\n            }\r\n            if(res.message){\r\n                return null;\r\n            }\r\n            console.log(res);\r\n            let refined_result = res.result.map((res) => {\r\n                // res.main_photo_url = \"http://r-ec.bstatic.com/xdata/images/hotel/square60/77897735.jpg?k=9bef4152fd76026ad7885fc95a2a48d04a5a6bb68a1eefa5e292a8429aa3845e&o=\";\r\n                // resolution is not good so replace square60 with max500\r\n                let photo_url = res.main_photo_url;\r\n                var pos = photo_url.indexOf(\"square60\");\r\n                photo_url = photo_url.substring(0, pos) + 'max500' + photo_url.substring(pos+8);\r\n                // console.log(photo_url);\r\n                return {id: res.hotel_id, name: res.hotel_name, type: res.accommodation_type_name, image: photo_url, address: res.address, city: res.city, country: res.country_trans }\r\n            })\r\n            return refined_result;\r\n        })\r\n    return res;\r\n}\r\nexport default getRooms;"]},"metadata":{},"sourceType":"module"}