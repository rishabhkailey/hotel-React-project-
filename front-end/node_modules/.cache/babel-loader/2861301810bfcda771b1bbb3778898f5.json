{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\Rishabh\\\\Desktop\\\\babel1\\\\react\\\\project\\\\hotel\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\Rishabh\\\\Desktop\\\\babel1\\\\react\\\\project\\\\hotel\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import key from'./apiKey';var getSuggestions=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(value){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://apidojo-booking-v1.p.rapidapi.com/locations/auto-complete?languagecode=en-us&text=\".concat(value),{\"method\":\"GET\",\"headers\":{\"x-rapidapi-host\":key['host'],\"x-rapidapi-key\":key['key']}}).then(function(res){return res.json();}).then(function(res){console.log(res);if(res.message&&res.message.localeCompare(\"Key doesn't exists\")===0){console.log(res.message);console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\");return null;}var suggestions=[];res.forEach(function(res){var i=0;for(i=0;i<res.label.length;i++){if(res.label[i].localeCompare(',')===0){break;}}var name=res.label.substring(0,i);var info=res.label.substring(i+1);suggestions.push({name:name,info:info,dest_type:res.dest_type,dest_id:res.dest_id,latitude:res.latitude,longitude:res.longitude});// console.log(name,info);\n});return suggestions;});case 2:res=_context.sent;// return res;\nconsole.log(res);// await console.log('suggestions = ', suggestions);\nreturn _context.abrupt(\"return\",res);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getSuggestions(_x){return _ref.apply(this,arguments);};}();export default getSuggestions;// showSuggestions('chan').then((res)=>{console.log(res)});","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/api_calls/getSuggestions.js"],"names":["key","getSuggestions","value","fetch","then","res","json","console","log","message","localeCompare","suggestions","forEach","i","label","length","name","substring","info","push","dest_type","dest_id","latitude","longitude"],"mappings":"mTAAA,MAAOA,CAAAA,GAAP,KAAgB,UAAhB,CAEA,GAAMC,CAAAA,cAAc,0FAAG,iBAAMC,KAAN,gJACHC,CAAAA,KAAK,qGAA8FD,KAA9F,EAAuG,CACpH,SAAU,KAD0G,CAEpH,UAAW,CACP,kBAAmBF,GAAG,CAAC,MAAD,CADf,CAEP,iBAAkBA,GAAG,CAAC,KAAD,CAFd,CAFyG,CAAvG,CAAL,CAOXI,IAPW,CAON,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAPM,EAQXF,IARW,CAQN,SAACC,GAAD,CAAS,CACXE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EACA,GAAIA,GAAG,CAACI,OAAJ,EAAeJ,GAAG,CAACI,OAAJ,CAAYC,aAAZ,CAA0B,oBAA1B,IAAoD,CAAvE,CAA0E,CACtEH,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,OAAhB,EACAF,OAAO,CAACC,GAAR,CAAY,sIAAZ,EACA,MAAO,KAAP,CACH,CACD,GAAIG,CAAAA,WAAW,CAAG,EAAlB,CACAN,GAAG,CAACO,OAAJ,CAAY,SAACP,GAAD,CAAS,CACjB,GAAIQ,CAAAA,CAAC,CAAG,CAAR,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGR,GAAG,CAACS,KAAJ,CAAUC,MAA1B,CAAkCF,CAAC,EAAnC,CAAuC,CACnC,GAAIR,GAAG,CAACS,KAAJ,CAAUD,CAAV,EAAaH,aAAb,CAA2B,GAA3B,IAAoC,CAAxC,CAA2C,CACvC,MACH,CACJ,CACD,GAAIM,CAAAA,IAAI,CAAGX,GAAG,CAACS,KAAJ,CAAUG,SAAV,CAAoB,CAApB,CAAuBJ,CAAvB,CAAX,CACA,GAAIK,CAAAA,IAAI,CAAGb,GAAG,CAACS,KAAJ,CAAUG,SAAV,CAAoBJ,CAAC,CAAG,CAAxB,CAAX,CACAF,WAAW,CAACQ,IAAZ,CAAiB,CAAEH,IAAI,CAAEA,IAAR,CAAcE,IAAI,CAAEA,IAApB,CAA0BE,SAAS,CAAEf,GAAG,CAACe,SAAzC,CAAoDC,OAAO,CAAEhB,GAAG,CAACgB,OAAjE,CAA0EC,QAAQ,CAAEjB,GAAG,CAACiB,QAAxF,CAAkGC,SAAS,CAAElB,GAAG,CAACkB,SAAjH,CAAjB,EACA;AACH,CAXD,EAYA,MAAOZ,CAAAA,WAAP,CACH,CA7BW,CADG,QACfN,GADe,eA+Bf;AACJE,OAAO,CAACC,GAAR,CAAYH,GAAZ,EACA;AAjCmB,gCAkCZA,GAlCY,wDAAH,kBAAdJ,CAAAA,cAAc,4CAApB,CAqCA,cAAeA,CAAAA,cAAf,CAEA","sourcesContent":["import key from './apiKey'\r\n\r\nconst getSuggestions = async(value) => {\r\n    let res = await fetch(`https://apidojo-booking-v1.p.rapidapi.com/locations/auto-complete?languagecode=en-us&text=${value}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": key['host'],\r\n                \"x-rapidapi-key\": key['key']\r\n            }\r\n        })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            console.log(res);\r\n            if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\r\n                console.log(res.message);\r\n                console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\")\r\n                return null;\r\n            }\r\n            let suggestions = [];\r\n            res.forEach((res) => {\r\n                var i = 0;\r\n                for (i = 0; i < res.label.length; i++) {\r\n                    if (res.label[i].localeCompare(',') === 0) {\r\n                        break;\r\n                    }\r\n                }\r\n                var name = res.label.substring(0, i);\r\n                var info = res.label.substring(i + 1);\r\n                suggestions.push({ name: name, info: info, dest_type: res.dest_type, dest_id: res.dest_id, latitude: res.latitude, longitude: res.longitude });\r\n                // console.log(name,info);\r\n            })\r\n            return suggestions;\r\n        })\r\n        // return res;\r\n    console.log(res);\r\n    // await console.log('suggestions = ', suggestions);\r\n    return res;\r\n    // await return suggestions;\r\n}\r\nexport default getSuggestions;\r\n\r\n// showSuggestions('chan').then((res)=>{console.log(res)});"]},"metadata":{},"sourceType":"module"}