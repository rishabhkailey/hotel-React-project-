{"ast":null,"code":"import key from './apiKey';\n\nconst getRooms = async (dest, date) => {\n  let arrival_date, departure_date;\n\n  if (!date) {\n    let date = new Date();\n    console.log(date);\n    arrival_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n    date.setDate(date.getDate() + 7);\n    departure_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\n  }\n\n  console.log(arrival_date, departure_date);\n  let res = await fetch(\"https://apidojo-booking-v1.p.rapidapi.com/properties/list?price_filter_currencycode=USD&search_id=none&order_by=popularity&languagecode=en-us&search_type=\".concat(dest.dest_type, \"&offset=0&dest_ids=\").concat(dest.dest_id, \"&guest_qty=\", 2, \"&arrival_date=\").concat(arrival_date, \"&departure_date=\").concat(departure_date, \"&room_qty=\", 1), {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-host\": \"apidojo-booking-v1.p.rapidapi.com\",\n      \"x-rapidapi-key\": key['key']\n    }\n  }).then(res => res.json()).then(res => {\n    if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\n      console.log(res.message);\n      console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\");\n      return null;\n    }\n\n    if (res.message) {\n      return null;\n    }\n\n    console.log(res);\n    let refined_result = res.result.map(res => {\n      // res.main_photo_url = \"http://r-ec.bstatic.com/xdata/images/hotel/square60/77897735.jpg?k=9bef4152fd76026ad7885fc95a2a48d04a5a6bb68a1eefa5e292a8429aa3845e&o=\";\n      // resolution is not good so replace square60 with max500\n      let photo_url = res.main_photo_url;\n      var pos = photo_url.indexOf(\"square60\");\n      photo_url = photo_url.substring(0, pos) + 'max500' + photo_url.substring(pos + 8); // console.log(photo_url);\n\n      return {\n        id: res.hotel_id,\n        name: res.hotel_name,\n        type: res.accommodation_type_name,\n        image: photo_url,\n        address: res.address,\n        city: res.city,\n        country: res.country_trans\n      }; //accomadation_type_name,hotel_name_trans,hotel_name,main_photo_url,country_trans,class,zip,location_score,address,id,min_total_price,currency_code,facility_review_score{review_count,review_word,rating},hotel_id,review_score(overall),review_score_word,review_nr,hotel_facilities,city,city_in_trans,\n      // order_by : popularity,distance,class_ascending,review_score,price\n      // filter: price::9-40(range),class // eh app kr layi\n    });\n    console.log(refined_result);\n    return refined_result;\n  });\n  console.log(\"res inside api call \".concat(res));\n  return res;\n};\n\nexport default getRooms;\n/*\r\n    // %252C seprator in bbox\r\n    // let bbox = `${latitude - 0.030268}%252C${latitude + 0.030268}%252C${longitude - 0.130171}%252C${longitude + 0.130171}`;\r\n    // console.log(rooms);\r\n    // console.log(bbox);\r\n\r\n    list by map usess boundary box , \r\n    fetch(`https://apidojo-booking-v1.p.rapidapi.com/properties/list-by-map?search_id=none&price_filter_currencycode=USD&languagecode=en-us&order_by=popularity&guest_qty=1&room_qty=1&departure_date=${departure_date}&bbox=${bbox}&arrival_date=${arrival_date}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": key['host'],\r\n            \"x-rapidapi-key\": key['key']\r\n        }\r\n    })\r\n */","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/api_calls/getRooms.js"],"names":["key","getRooms","dest","date","arrival_date","departure_date","Date","console","log","getFullYear","getMonth","getDate","setDate","res","fetch","dest_type","dest_id","then","json","message","localeCompare","refined_result","result","map","photo_url","main_photo_url","pos","indexOf","substring","id","hotel_id","name","hotel_name","type","accommodation_type_name","image","address","city","country","country_trans"],"mappings":"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","sourcesContent":["import key from './apiKey'\r\n\r\nconst getRooms = async(dest, date) => {\r\n    let arrival_date, departure_date;\r\n\r\n    if (!date) {\r\n        let date = new Date();\r\n        console.log(date);\r\n        arrival_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n        date.setDate(date.getDate() + 7);\r\n        departure_date = '' + date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate();\r\n    }\r\n    console.log(arrival_date, departure_date);\r\n\r\n    let res = await fetch(`https://apidojo-booking-v1.p.rapidapi.com/properties/list?price_filter_currencycode=USD&search_id=none&order_by=popularity&languagecode=en-us&search_type=${dest.dest_type}&offset=0&dest_ids=${dest.dest_id}&guest_qty=${2}&arrival_date=${arrival_date}&departure_date=${departure_date}&room_qty=${1}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"apidojo-booking-v1.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": key['key']\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            if (res.message && res.message.localeCompare(\"Key doesn't exists\") === 0) {\r\n                console.log(res.message);\r\n                console.log(\"add api key in your project file api_calls/apiKey\\nif you don't have key then get it from \\nhttps://rapidapi.com/apidojo/api/booking\")\r\n                return null;\r\n            }\r\n            if (res.message) {\r\n                return null;\r\n            }\r\n            console.log(res);\r\n            let refined_result = res.result.map((res) => {\r\n                // res.main_photo_url = \"http://r-ec.bstatic.com/xdata/images/hotel/square60/77897735.jpg?k=9bef4152fd76026ad7885fc95a2a48d04a5a6bb68a1eefa5e292a8429aa3845e&o=\";\r\n                // resolution is not good so replace square60 with max500\r\n                let photo_url = res.main_photo_url;\r\n                var pos = photo_url.indexOf(\"square60\");\r\n                photo_url = photo_url.substring(0, pos) + 'max500' + photo_url.substring(pos + 8);\r\n                // console.log(photo_url);\r\n                return { id: res.hotel_id, name: res.hotel_name, type: res.accommodation_type_name, image: photo_url, address: res.address, city: res.city, country: res.country_trans }\r\n                //accomadation_type_name,hotel_name_trans,hotel_name,main_photo_url,country_trans,class,zip,location_score,address,id,min_total_price,currency_code,facility_review_score{review_count,review_word,rating},hotel_id,review_score(overall),review_score_word,review_nr,hotel_facilities,city,city_in_trans,\r\n                // order_by : popularity,distance,class_ascending,review_score,price\r\n                // filter: price::9-40(range),class // eh app kr layi\r\n            })\r\n            console.log(refined_result);\r\n            return refined_result;\r\n        })\r\n    console.log(`res inside api call ${res}`);\r\n    return res;\r\n}\r\nexport default getRooms;\r\n\r\n/*\r\n    // %252C seprator in bbox\r\n    // let bbox = `${latitude - 0.030268}%252C${latitude + 0.030268}%252C${longitude - 0.130171}%252C${longitude + 0.130171}`;\r\n    // console.log(rooms);\r\n    // console.log(bbox);\r\n\r\n    list by map usess boundary box , \r\n    fetch(`https://apidojo-booking-v1.p.rapidapi.com/properties/list-by-map?search_id=none&price_filter_currencycode=USD&languagecode=en-us&order_by=popularity&guest_qty=1&room_qty=1&departure_date=${departure_date}&bbox=${bbox}&arrival_date=${arrival_date}`, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n            \"x-rapidapi-host\": key['host'],\r\n            \"x-rapidapi-key\": key['key']\r\n        }\r\n    })\r\n */"]},"metadata":{},"sourceType":"module"}