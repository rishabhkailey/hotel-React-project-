{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rishabh\\\\Desktop\\\\babel1\\\\react\\\\project\\\\hotel\\\\front-end\\\\src\\\\components\\\\searchList\\\\searchList.jsx\";\nimport React, { Component } from 'react';\nimport SearchFilter from './../searchFIlter/searchFilter';\nimport getRooms from './../../api_calls/getRooms';\nimport { throwStatement } from '@babel/types';\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom';\nimport './searchedList.css';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    console.log('contructor', this.props); // const{longitude,latitude} = this.props.location.state.bbox[0];\n\n    this.state = {\n      show_list: false,\n      dest: null,\n      minPrice: 0,\n      maxPrice: 1000\n    };\n    this.disableShowList = this.disableShowList.bind(this);\n    this.loadHotels = this.loadHotels.bind(this);\n  }\n\n  disableShowList() {\n    this.setState({\n      show_list: false\n    });\n  }\n  /*this method is now unsafe_componentWillRecieveProps , and in next update it will be removed so use getDerivedStateFromProps\r\n   componentWillReceiveProps(new_props) // during update component life cycle =  componentWillReceiveProps -> shouldComponentUpdate ->(if true from scu) componentWillUpdate -> render -> componentDidUpdate\r\n   {\r\n       if(this.page_loaded){\r\n           this.loadHotels();\r\n       }\r\n   }\r\n   */\n  // static method so this keyword cannot be used so props and state are send as arguments\n  // and to setState return new state obj , or null if don't want to update state \n\n\n  static getDerivedStateFromProps(props, state) {\n    // eh har var chalda after constructor and without constructor when new props arrives(update) \n    // not after setState\n    const dest = props.location.state.destination[0]; //if state.dest is null means first time then update state\n    // or if new props.dest_id is different then current state\n\n    if (state.dest === null || state.dest.dest_id !== dest.dest_id) {\n      console.log('rerender');\n      return {\n        dest: props.location.state.destination[0],\n        needUpdate: true\n      };\n    } else return null;\n  }\n\n  componentDidUpdate() {\n    console.log(\"component update lalala , need update = \".concat(this.state.needUpdate));\n\n    if (this.state.needUpdate) {\n      this.setState({\n        needUpdate: false\n      });\n      this.loadHotels(); //fetch nal jo changes ho rhe ne oh detect nhi krda\n      //when we search and are already on /search\n    }\n  }\n\n  loadHotels(filters) {\n    console.log(filters);\n    this.disableShowList();\n    console.log('loadHotels()');\n    const dest = this.state.dest;\n    console.log(dest); // getRooms(dest)\n    //     .then((list) => {\n    //         if (list) {\n    //             console.log(list);\n    //             this.setState({ show_list: true, hotels: list ,loading: false});\n    //         }\n    //     })\n\n    this.setState({\n      show_list: true,\n      hotels: []\n    }); // this.setState({ page_loaded: true });\n  }\n\n  componentDidMount() {\n    console.log('inside componentdidmount');\n    this.loadHotels(); //nhi thik a , eh sirf ik var hi chalda\n  }\n\n  render() {\n    // let { path, url } = useRouteMatch();// path used in Route , url used in link(matched)\n    // let path = '/search';\n    // let url = '/search';\n    let list;\n\n    if (this.state.show_list) {\n      list = this.state.hotels.map((x, index) => {\n        return React.createElement(Link, {\n          to: {\n            pathname: \"search/hotel/\".concat(x.id),\n            state: {\n              hotel: x\n            }\n          },\n          style: {\n            textDecoration: 'none'\n          },\n          className: \"row hotelLink\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-3\",\n          style: {\n            paddingTop: \"25%\",\n            backgroundColor: \"grey\",\n            border: \"1px solid black\",\n            overflow: \"hidden\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          style: {\n            position: \"absolute\",\n            top: \"0px\",\n            left: \"0px\",\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          },\n          src: x.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-8\",\n          style: {\n            paddingLeft: \"30px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row hotelHeading\",\n          style: {\n            fontSize: \"3vw\",\n            fontWeight: \"500\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, x.name), React.createElement(\"div\", {\n          className: \"row\",\n          style: {\n            fontSize: \"2vw\",\n            fontWeight: \"400\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, x.address + \",\" + x.city + \",\" + x.country)));\n      });\n    } else {\n      list = React.createElement(\"h1\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-2\",\n      style: {\n        borderRight: '1px solid #878787'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(SearchFilter, {\n      loadHotels: this.loadHotels,\n      dest: this.state.dest,\n      minPrice: this.state.minPrice,\n      maxPrice: this.state.maxPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, list)));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["C:/Users/Rishabh/Desktop/babel1/react/project/hotel/front-end/src/components/searchList/searchList.jsx"],"names":["React","Component","SearchFilter","getRooms","throwStatement","Switch","Route","Link","useRouteMatch","List","constructor","props","console","log","state","show_list","dest","minPrice","maxPrice","disableShowList","bind","loadHotels","setState","getDerivedStateFromProps","location","destination","dest_id","needUpdate","componentDidUpdate","filters","hotels","componentDidMount","render","list","map","x","index","pathname","id","hotel","textDecoration","paddingTop","backgroundColor","border","overflow","position","top","left","width","height","objectFit","image","paddingLeft","fontSize","fontWeight","name","address","city","country","borderRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport SearchFilter from './../searchFIlter/searchFilter';\r\nimport getRooms from './../../api_calls/getRooms';\r\nimport { throwStatement } from '@babel/types';\r\nimport { Switch, Route, Link, useRouteMatch } from 'react-router-dom'\r\nimport './searchedList.css'\r\n\r\nclass List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('contructor', this.props);\r\n        // const{longitude,latitude} = this.props.location.state.bbox[0];\r\n        this.state = {\r\n            show_list: false,\r\n            dest: null,\r\n            minPrice: 0,\r\n            maxPrice: 1000\r\n        }\r\n        this.disableShowList = this.disableShowList.bind(this);\r\n        this.loadHotels = this.loadHotels.bind(this);\r\n    }\r\n    disableShowList() {\r\n        this.setState({ show_list: false })\r\n    }\r\n    /*this method is now unsafe_componentWillRecieveProps , and in next update it will be removed so use getDerivedStateFromProps\r\n     componentWillReceiveProps(new_props) // during update component life cycle =  componentWillReceiveProps -> shouldComponentUpdate ->(if true from scu) componentWillUpdate -> render -> componentDidUpdate\r\n     {\r\n         if(this.page_loaded){\r\n             this.loadHotels();\r\n         }\r\n     }\r\n     */\r\n\r\n    // static method so this keyword cannot be used so props and state are send as arguments\r\n    // and to setState return new state obj , or null if don't want to update state \r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        // eh har var chalda after constructor and without constructor when new props arrives(update) \r\n        // not after setState\r\n\r\n        const dest = props.location.state.destination[0];\r\n        //if state.dest is null means first time then update state\r\n        // or if new props.dest_id is different then current state\r\n        if ((state.dest === null) || (state.dest.dest_id !== dest.dest_id)) {\r\n            console.log('rerender');\r\n            return {\r\n                dest: props.location.state.destination[0],\r\n                needUpdate: true\r\n            }\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n    componentDidUpdate() {\r\n        console.log(`component update lalala , need update = ${this.state.needUpdate}`);\r\n        if (this.state.needUpdate) {\r\n            this.setState({ needUpdate: false });\r\n            this.loadHotels();//fetch nal jo changes ho rhe ne oh detect nhi krda\r\n            //when we search and are already on /search\r\n        }\r\n    }\r\n    loadHotels(filters) {\r\n        console.log(filters)\r\n        this.disableShowList();\r\n        console.log('loadHotels()');\r\n        const { dest } = this.state;\r\n        console.log(dest);\r\n\r\n        // getRooms(dest)\r\n        //     .then((list) => {\r\n        //         if (list) {\r\n        //             console.log(list);\r\n        //             this.setState({ show_list: true, hotels: list ,loading: false});\r\n        //         }\r\n        //     })\r\n        this.setState({ show_list: true, hotels: [] });\r\n        // this.setState({ page_loaded: true });\r\n    }\r\n    componentDidMount() {\r\n        console.log('inside componentdidmount');\r\n        this.loadHotels();\r\n        //nhi thik a , eh sirf ik var hi chalda\r\n    }\r\n    render() {\r\n        // let { path, url } = useRouteMatch();// path used in Route , url used in link(matched)\r\n        // let path = '/search';\r\n        // let url = '/search';\r\n\r\n        let list;\r\n        if (this.state.show_list) {\r\n            list = this.state.hotels.map((x, index) => {\r\n                return <Link to={{\r\n                    pathname: `search/hotel/${x.id}`,\r\n                    state: {\r\n                        hotel: x\r\n                    }\r\n                }} style={{ textDecoration: 'none' }} className=\"row hotelLink\" key={index}>\r\n                    <div className=\"col-3\" style={{ paddingTop: \"25%\", backgroundColor: \"grey\", border: \"1px solid black\", overflow: \"hidden\" }}>\r\n                        <img style={{ position: \"absolute\", top: \"0px\", left: \"0px\", width: \"100%\", height: \"100%\", objectFit: \"cover\" }} src={x.image} />\r\n                    </div>\r\n                    <div className=\"col-8\" style={{ paddingLeft: \"30px\" }}>\r\n                        <div className=\"row hotelHeading\" style={{ fontSize: \"3vw\", fontWeight: \"500\" }}>\r\n                            {x.name}\r\n                        </div>\r\n                        <div className=\"row\" style={{ fontSize: \"2vw\", fontWeight: \"400\" }}>\r\n                            {x.address + \",\" + x.city + \",\" + x.country}\r\n                        </div>\r\n                    </div>\r\n                </Link >\r\n            })\r\n        }\r\n        else {\r\n            list = <h1 className='row'>Loading...</h1>\r\n        }\r\n        return <div className='container-fluid'>\r\n            <div className='row'>\r\n                <div className='col-lg-2' style={{ borderRight: '1px solid #878787' }}>\r\n\r\n                    <SearchFilter loadHotels={this.loadHotels} dest={this.state.dest} minPrice={this.state.minPrice} maxPrice={this.state.maxPrice} />\r\n\r\n                </div>\r\n                <div className='col-lg-10'>{list}</div>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\nexport default List;"]},"metadata":{},"sourceType":"module"}